// Package vra8 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package vra8

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"PTtob5/s7wydo7v7z62h97kl+vD6ou8e7bCb6218vP/Bd7ZO5Pyo+8vFwxn++b53tPPt8/Uj7W2dNs++",
	"DR7ODtqy3bde603z5tOw+an1Zti7vpLv3N1c3wzd68emmmfLa91cv+n3Ru/FzaWc0+P959Z7/vHTqed8",
	"O3yQbT5/+njX+eb3OiN3iPCmXBP86VL93oTvd5rwetPrfKOPp92TrZNvn8dn3c/N4/0Pd72WXINtOWYX",
	"fTpt3lw3BxdHO+LztReofls7gXv0cdtVa3H4dNP9ODp9Onk67np3p60TcXr08e4GN998/nYxPO46TycH",
	"gzefu3fbp9eH489y40Yft+XGnXSvnk6fOm9ODq6aJ+MHDK/fN2Pz2T7r/vZ0vP9h9Pl60+/94kXfar6v",
	"t3XzzXzfuLf18UGv1ccntT5bH+7dT3ty/Z86XlOOKefPO98oNmv+0Wl9HJ9099o3R96Tc7Tz5B69x72j",
	"q+Bza0fIPly5lqNw/fVev//4dPOp83giCa57N/ZOyZv2dvdozxluf9v/dvjbNnzXvnoILvc+7RzS85vf",
	"DoaHnbun30ZXR4P25o7/8+kO7n26/XQ4Om4enV7t7JD9q+FWM9i43dnafvdhb+Df/d68oUHrdtj5fO7f",
	"vhEf+p1D9u3m/rz3269e6/2t+J2+7aHOz+/ffAt+++y13n3yg8MD/6O7NT65d0Tr/uePzRF+7z99cPze",
	"efeix4f9rZ1v/bFo3TLK+x+27tu/3X/89fHd9tM7t3mNDi/OHweXoz3ud+8d9+ffn4Lxz2/dNnx7/dvW",
	"zQ65H21gv3t9cO/83Lzq/vr7/vab3/ubd0/vOP1ltNEftvnOVfPtzUOX/PLt3edTse2dPJI3ePPdk7jb",
	"vuy++fz7HjvpPz6SX27fvR143i8faPPu8+HZHfcuTz7xy0P6Db5/YNtPt/Tk8c3+aGDTJr7bChkdt7Rq",
	"xQFyqKtrRXSjs1dqD/okW0RV/QrTsGgmdhqLMCYrDHuBBpgLZqtsyPNdalo9FLv7ezNfSm2FWeyHA/eR",
	"cEK0Xdo3iSBJ7U6dgeFCxRS2+OGY1NTk+8gJGBZjdVDuQY4dSaW13f9+XTdHl/1bEqHUHPNP1SNE5IFs",
	"DGLEQMC82npN/ne3NhTC57uNxj2DG95GcxPWHcr8utIearJfM9XM9W7C4JQTaRnjD8Q+JOSvMzZQjdq+",
	"H3v819e//n8AAAD//5N8iFkbwAEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
